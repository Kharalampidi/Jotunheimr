// Generated by CoffeeScript 1.10.0
var assert, base, req, request, resolve;

assert = require('assert');

request = require('supertest');

resolve = require('path').resolve;

req = request(require('../..'));

base = '';

describe('/', function() {
  return it('should not return much', function(done) {
    return req.get(base + "/").expect(204).end(done);
  });
});

describe('/upload', function() {
  var url;
  url = base + "/upload";
  it('returns 400 for invalid form filed', function(done) {
    return req.post(url).attach('some_field', resolve(__dirname, '../assets/invalid.image')).expect(400).expect({
      message: 'Unknown form field "some_field"'
    }, done);
  });
  it('returns 422 for invalid image type', function(done) {
    return req.post(url).attach('image', resolve(__dirname, '../assets/invalid.image')).expect(422, done);
  });
  it('should upload single horizontal image to s3', function(done) {
    this.timeout(30000);
    return req.post(url).attach('image', resolve(__dirname, '../assets/horizontal.jpg')).expect(201).expect(function(res) {
      assert.deepEqual(res.body.meta.height, 2623);
      assert.deepEqual(res.body.meta.width, 5184);
      return assert.equal(res.body.versions.length, 5);
    }).end(done);
  });
  return it('should upload single vertical image to s3', function(done) {
    this.timeout(30000);
    return req.post(url).attach('image', resolve(__dirname, '../assets/vertical.jpg')).expect(201).expect(function(res) {
      assert.deepEqual(res.body.meta.height, 3456);
      assert.deepEqual(res.body.meta.width, 1929);
      return assert.equal(res.body.versions.length, 5);
    }).end(done);
  });
});
